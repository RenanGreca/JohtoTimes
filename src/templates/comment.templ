package templates

import (
  "fmt"

  "johtotimes.com/src/model"
)

templ CommentLoader(postID int64) {
  <h1>Comments</h1>
  <div class="button container"
       hx-get={ fmt.Sprintf("/newcomment/%d", postID) }
       hx-trigger="click"
       hx-swap="outerHTML">
    Leave a comment!
  </div>
  <div id="comments" class="comments"
       hx-get={ fmt.Sprintf("/comments/%d", postID) }
       hx-trigger="load"
       hx-target="#comments"
       hx-swap="outerHTML">
    <h1>Loading comments...</h1>
  </div>
}

templ CommentListTemplate(comments []model.Comment) {
  <div id="comments" class="comments">
    for _, c := range comments {
      @commentTemplate(&c)
    }
  </div>
}

// TODO: submitting the form duplicates the form
templ CreateCommentTemplate(postID int64, captchaID string) {
  <form id="create-comment"
        hx-post={ fmt.Sprintf("/comments/%d", postID) }
        hx-target="#comments">
    <div class="comment-form container">
      <textarea name="name" placeholder="Name"></textarea>
      <textarea name="email" placeholder="Email"></textarea>
      <textarea name="content" placeholder="Write a comment..."></textarea>
      <img src={ fmt.Sprintf("/captcha/%s", captchaID) } alt="Captcha" />
      <input type="hidden" name="captchaID" value={ captchaID } />
      <textarea name="captcha" placeholder="Type the Unown above"></textarea>
      <button type="submit" class="button">Submit</button>
    </div>
  </form>
}

templ commentTemplate(comment *model.Comment) {
  <div class="comment container">
    <h3>{ comment.Name }</h3>
    { comment.Content }
  </div>
}
