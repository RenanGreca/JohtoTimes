package templates

import (
  "strings"
  "strconv"
  "fmt"

  "johtotimes.com/src/model"
)

templ ListTemplate(title string, slug string, description templ.Component, posts []model.Post, page int) {
  <h1>{title}</h1>
  <h2>@description</h2>
  <div class="list">
    for _, post := range posts {
      @ListItem(&post)
    }
    <div class="pagination">
    if page > 1 {
    <a class="prev"
       hx-get={ fmt.Sprintf("/%s?page=%d", slug, page-1) }
       hx-target="#content"
       hx-swap="innerHTML"
       hx-replace-url={ fmt.Sprintf("/%s?page=%d", slug, page-1) }
       hx-push-url="true">
      ⬅ Previous page
    </a>
    }
    <a class="next"
       hx-get={ fmt.Sprintf("/%s?page=%d", slug, page+1) }
       hx-target="#content"
       hx-swap="innerHTML"
       hx-replace-url={ fmt.Sprintf("/%s?page=%d", slug, page+1) }
       hx-push-url="true">
      Next page ➡
    </a>
    </div>
  </div>
}

templ ListItem(post *model.Post) {
    <div class="list-item"
         hx-get={ post.Permalink }
         hx-target="#content"
         hx-swap="innerHTML"
         hx-replace-url={ post.Permalink }
         hx-push-url="true">
      <div class="list-image">
        <img src={ post.Img } />
      </div>
      <div class="list-contents">
        if post.Type == 'I' {
          <span class="category">
            Vol. { strconv.Itoa(post.Volume) }, Issue { strconv.Itoa(post.Issue) }
          </span>
        } else {
          <span class="category">
            { strings.ToUpper(post.Category.Singular) }
          </span>
        }

        <h3>{ post.Title }</h3>
        <span class="description">
          { post.Description }
        </span>
      </div>
    </div>
}
